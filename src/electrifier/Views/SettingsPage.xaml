<Page x:Class="electrifier.Views.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:behaviors="using:electrifier.Behaviors"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:helpers="using:electrifier.Helpers"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:viewmodels="using:electrifier.ViewModels"
      xmlns:xaml="using:Microsoft.UI.Xaml"
      xmlns:system="using:System"
      behaviors:NavigationViewHeaderBehavior.HeaderMode="Never"
      d:DataContext="{d:DesignInstance Type=viewmodels:SettingsViewModel}"
      mc:Ignorable="d">
    <Page.Resources>
        <helpers:StringToUriConverter x:Key="StringToUriConverter" />
        <x:String x:Key="PrivacyTermsLinkUri">https://github.com/electrifier/electrifier/blob/main/PRIVACY.md</x:String>
        <x:String x:Key="LicenseTermsLinkUri">https://github.com/electrifier/electrifier/blob/main/LICENSE</x:String>
    </Page.Resources>
    <Grid>
        <StackPanel x:Name="ContentArea">
            <TextBlock x:Uid="Settings_Personalization"
                       Style="{ThemeResource SubtitleTextBlockStyle}" />
            <StackPanel x:Name="SettingsAppearance"
                        Margin="{StaticResource SmallTopBottomMargin}">
                <TextBlock x:Uid="Settings_AppearanceTextBlock">Appearance</TextBlock>
                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <DropDownButton Content="Monochrome">
                        <DropDownButton.Flyout>
                            <MenuFlyout Placement="BottomEdgeAlignedRight">
                                <MenuFlyoutItem IsEnabled="False"
                                                Text="Aroma" />
                                <MenuFlyoutItem IsEnabled="False"
                                                Text="Dawnbreed" />
                                <MenuFlyoutItem IsEnabled="False"
                                                Text="Kiosk" />
                                <MenuFlyoutItem IsEnabled="False"
                                                Text="Luxus" />
                                <MenuFlyoutItem IsEnabled="True"
                                                Text="Monochrome" />
                                <MenuFlyoutItem IsEnabled="False"
                                                Text="Robot" />
                                <MenuFlyoutSeparator />
                                <MenuFlyoutItem IsEnabled="False"
                                                Text="Aero" />
                                <MenuFlyoutItem IsEnabled="False"
                                                Text="Longhorn" />
                                <MenuFlyoutSeparator />
                                <MenuFlyoutItem IsEnabled="False"
                                                Text="Customize..." />
                            </MenuFlyout>
                        </DropDownButton.Flyout>
                    </DropDownButton>
                </StackPanel>
            </StackPanel>

            <StackPanel x:Name="SettingsTheme"
                        Margin="{StaticResource SmallTopBottomMargin}">
                <TextBlock x:Uid="Settings_Theme" />
                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <RadioButton x:Uid="Settings_Theme_Light"
                                 Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                 FontSize="15"
                                 GroupName="AppTheme"
                                 IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Light</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton x:Uid="Settings_Theme_Dark"
                                 Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                 FontSize="15"
                                 GroupName="AppTheme"
                                 IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Dark</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton x:Uid="Settings_Theme_Default"
                                 Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                 FontSize="15"
                                 GroupName="AppTheme"
                                 IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Default</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                </StackPanel>
            </StackPanel>
            <TextBlock x:Uid="Settings_About"
                       Style="{ThemeResource SubtitleTextBlockStyle}" />
            <StackPanel Margin="{StaticResource XSmallTopMargin}">
                <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}"
                           Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" />
                <TextBlock x:Uid="Settings_AboutDescription"
                           Margin="{StaticResource XSmallTopMargin}"
                           Style="{ThemeResource BodyTextBlockStyle}" />
                <!-- todo: add NavigateUri="{StaticResource PrivacyTermsLinkUri}" as URI: -->
                <HyperlinkButton x:Uid="SettingsPage_PrivacyTermsLink"
                                 Margin="{StaticResource SettingsPageHyperlinkButtonMargin}"
                                 ToolTipService.ToolTip="{StaticResource PrivacyTermsLinkUri}" />
                <!-- todo: add NavigateUri="{StaticResource PrivacyTermsLinkUri}" as URI -->
                <HyperlinkButton x:Uid="SettingsPage_LicenseTermsLink"
                                 Margin="{StaticResource SettingsPageHyperlinkButtonMargin}"
                                 ToolTipService.ToolTip="{StaticResource LicenseTermsLinkUri}" />
                <!-- todo: add NavigateUri="{StaticResource LicenseTermsLinkUri}" as URI -->
            </StackPanel>
        </StackPanel>
    </Grid>
</Page>
